{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["buttonsReducer","state","action","type","buttons","payload","data","map","b","button","find","b_","id","data_","checked","includes","checked_old","App","useState","init","setInit","error_","setError_","useReducer","dispatchButtons","useSWR","fetch","then","r","json","revalidateOnFocus","error","isValidating","useEffect","swith","length","s","_check","a","btn","check","res","res_","_toggle","control_url","className","onClick","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"main.js","sourcesContent":["import useSWR, {mutate} from 'swr';\r\nimport {useEffect, useState, useReducer} from 'react';\r\n\r\nimport './App.css';\r\n\r\nconst fetcher = url => fetch(url).then(r => r.json());\r\nconst home_url = 'http://192.168.43.67/api/get_devices';\r\n\r\nfunction buttonsReducer(state = [], action) {\r\n  if (action.type === 'revalidate') {\r\n    const {buttons} = action.payload;\r\n  \r\n    if (!buttons) {\r\n      return state;\r\n    }\r\n  \r\n    let data = buttons.map(b => {\r\n      const button = state.find(b_ => b_.id === b.id);\r\n      \r\n      const data_ = b;\r\n      data_.checked = button?.checked || 'loading';\r\n\r\n      return data_;\r\n    });\r\n\r\n    return data;\r\n  } else if (['check', 'check_fail', 'loading'].includes(action.type)) {\r\n      const {id, checked = false} = action.payload;\r\n    \r\n      const button = state.find(b => b.id === id);\r\n\r\n      if (!button) {\r\n        return state;\r\n      }\r\n      \r\n      const data_ = state.map(b => {\r\n        if (b.id === id) {\r\n          const b_ = {\r\n            ...b,\r\n            checked: action.type === 'loading' \r\n              ? 'loading' : checked,\r\n            checked_old: button.checked,\r\n          };\r\n\r\n          return b_;\r\n        }\r\n\r\n        return b;\r\n      });\r\n\r\n      return data_;\r\n    } else {\r\n      return state;\r\n  }\r\n}\r\n\r\nconst App =() => {\r\n  const [init, setInit] = useState(false);\r\n  const [error_, setError_] = useState(false);\r\n  const [buttons, dispatchButtons] = useReducer(buttonsReducer, []);\r\n  \r\n  const {data, error, isValidating} = useSWR(\r\n    'home', \r\n    () => fetcher(home_url),\r\n    {\r\n      revalidateOnFocus: false,\r\n    },\r\n  );\r\n  \r\n  \r\n  useEffect(() => {\r\n    setError_(false);\r\n\r\n    if (data?.swith?.length) {\r\n      dispatchButtons({\r\n        type: 'revalidate',\r\n        payload: {\r\n          buttons: data.swith\r\n        },\r\n      });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (!init && buttons.length) {\r\n      buttons.map(s => _check(s.id));\r\n\r\n      setInit(true);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [buttons]);\r\n\r\n  const _check = async (id) => {\r\n    setError_(false);\r\n\r\n    const btn = buttons?.find(b => b.id === id);\r\n\r\n    if (!btn) {\r\n      return;\r\n    }\r\n    \r\n    try { \r\n      dispatchButtons({\r\n        type: 'loading',\r\n        payload: {id},\r\n      });\r\n\r\n      const res = await fetch(btn.check);\r\n      const res_ = await res.json();\r\n      \r\n      dispatchButtons({\r\n        type: 'check',\r\n        payload: {id, checked: res_.checked},\r\n      });\r\n    } catch(e) {\r\n      dispatchButtons({\r\n        type: 'check_fail',\r\n        payload: {id},\r\n      });\r\n\r\n      setError_(true);\r\n    }\r\n  }\r\n\r\n  const _toggle = async (btn) => {\r\n    setError_(false);\r\n\r\n    try { \r\n      const res = await fetch(btn.control_url);\r\n\r\n      dispatchButtons({\r\n        type: 'check',\r\n        payload: {id: btn.id, checked: !btn.checked},\r\n      });\r\n    } catch(e) {\r\n      setError_(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        {buttons?.length ?\r\n          <ul className=\"list\">\r\n            {buttons.map(btn => (\r\n              <li \r\n                key={btn.id} \r\n                onClick={() => _toggle(btn)}\r\n                >{btn.title} - {btn.checked === 'loading' ? 'loading...' : btn.checked ? 'On' : 'Off'}</li>\r\n            ))}\r\n          </ul>\r\n        : <div/>}\r\n\r\n        {error && <div>failed to load</div>}\r\n        {error_ && <div>transaction failed!</div>}\r\n        {isValidating && <div>loading...</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}